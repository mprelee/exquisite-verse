name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 📦 Checkout the source code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # ⚡ Cache Rust dependencies and target artifacts
      - name: Cache Cargo Dependencies and Target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # ⚡ Cache globally installed cargo binaries like trunk & wasm-bindgen
      - name: Cache Cargo Binaries
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo-bin-v1
          restore-keys: |
            ${{ runner.os }}-cargo-bin-

      # 🦀 Install Rust toolchain + WASM target
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      # 🧰 Add ~/.cargo/bin to PATH
      - name: Add Cargo bin to PATH
        run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      # 🚀 Install cargo-binstall if not already installed
      - name: Install cargo-binstall
        run: |
          if ! command -v cargo-binstall >/dev/null; then
            cargo install cargo-binstall
          fi

      # 🚀 Install trunk only if missing
      - name: Install Trunk
        run: |
          if ! command -v trunk >/dev/null; then
            cargo binstall trunk -y
          fi

      # 🧪 Install wasm-bindgen only if missing
      - name: Install wasm-bindgen
        run: |
          if ! command -v wasm-bindgen >/dev/null; then
            cargo binstall wasm-bindgen-cli -y
          fi

      # 🔨 Build the app using Trunk in release mode
      - name: Build with Trunk
        run: trunk build --release

      # ⚙️ Prepare GitHub Pages deployment
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4

      # 📤 Upload static assets to GitHub Pages artifact
      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4